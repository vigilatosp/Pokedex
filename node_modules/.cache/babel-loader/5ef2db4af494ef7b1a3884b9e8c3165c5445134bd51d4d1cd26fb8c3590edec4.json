{"ast":null,"code":"import _defineProperty from \"/home/guilherme/Imagens/Pokedex/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/guilherme/Imagens/Pokedex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/guilherme/Imagens/Pokedex/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/guilherme/Imagens/Pokedex/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"onChange\", \"value\", \"defaultValue\", \"name\", \"isDisabled\", \"isFocusable\", \"isNative\"];\n// src/use-radio-group.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useRef, useState, useId } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useRadioGroup() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var onChangeProp = props.onChange,\n    valueProp = props.value,\n    defaultValue = props.defaultValue,\n    nameProp = props.name,\n    isDisabled = props.isDisabled,\n    isFocusable = props.isFocusable,\n    isNative = props.isNative,\n    htmlProps = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(defaultValue || \"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    valueState = _useState2[0],\n    setValue = _useState2[1];\n  var isControlled = typeof valueProp !== \"undefined\";\n  var value = isControlled ? valueProp : valueState;\n  var ref = useRef(null);\n  var focus = useCallback(function () {\n    var rootNode = ref.current;\n    if (!rootNode) return;\n    var query = \"input:not(:disabled):checked\";\n    var firstEnabledAndCheckedInput = rootNode.querySelector(query);\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    query = \"input:not(:disabled)\";\n    var firstEnabledInput = rootNode.querySelector(query);\n    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();\n  }, []);\n  var uuid = useId();\n  var fallbackName = \"radio-\".concat(uuid);\n  var name = nameProp || fallbackName;\n  var _onChange = useCallback(function (eventOrValue) {\n    var nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n    onChangeProp == null ? void 0 : onChangeProp(String(nextValue));\n  }, [onChangeProp, isControlled]);\n  var getRootProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: mergeRefs(forwardedRef, ref),\n      role: \"radiogroup\"\n    });\n  }, []);\n  var getRadioProps = useCallback(function () {\n    var _objectSpread2;\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _objectSpread(_objectSpread({}, props2), {}, (_objectSpread2 = {\n      ref: ref2,\n      name: name\n    }, _defineProperty(_objectSpread2, checkedKey, value != null ? props2.value === value : void 0), _defineProperty(_objectSpread2, \"onChange\", function onChange(event) {\n      _onChange(event);\n    }), _defineProperty(_objectSpread2, \"data-radiogroup\", true), _objectSpread2));\n  }, [isNative, name, _onChange, value]);\n  return {\n    getRootProps: getRootProps,\n    getRadioProps: getRadioProps,\n    name: name,\n    ref: ref,\n    focus: focus,\n    setValue: setValue,\n    value: value,\n    onChange: _onChange,\n    isDisabled: isDisabled,\n    isFocusable: isFocusable,\n    htmlProps: htmlProps\n  };\n}\nexport { useRadioGroup };","map":{"version":3,"names":["isObject","mergeRefs","useCallback","useRef","useState","useId","isInputEvent","value","target","useRadioGroup","props","onChangeProp","onChange","valueProp","defaultValue","nameProp","name","isDisabled","isFocusable","isNative","htmlProps","valueState","setValue","isControlled","ref","focus","rootNode","current","query","firstEnabledAndCheckedInput","querySelector","firstEnabledInput","uuid","fallbackName","eventOrValue","nextValue","String","getRootProps","props2","forwardedRef","role","getRadioProps","ref2","checkedKey","event"],"sources":["/home/guilherme/Imagens/Pokedex/node_modules/@chakra-ui/radio/dist/chunk-ROBJ47HJ.mjs"],"sourcesContent":["// src/use-radio-group.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useRef, useState, useId } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useRadioGroup(props = {}) {\n  const {\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n    name: nameProp,\n    isDisabled,\n    isFocusable,\n    isNative,\n    ...htmlProps\n  } = props;\n  const [valueState, setValue] = useState(defaultValue || \"\");\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const ref = useRef(null);\n  const focus = useCallback(() => {\n    const rootNode = ref.current;\n    if (!rootNode)\n      return;\n    let query = `input:not(:disabled):checked`;\n    const firstEnabledAndCheckedInput = rootNode.querySelector(\n      query\n    );\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    query = `input:not(:disabled)`;\n    const firstEnabledInput = rootNode.querySelector(query);\n    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();\n  }, []);\n  const uuid = useId();\n  const fallbackName = `radio-${uuid}`;\n  const name = nameProp || fallbackName;\n  const onChange = useCallback(\n    (eventOrValue) => {\n      const nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp == null ? void 0 : onChangeProp(String(nextValue));\n    },\n    [onChangeProp, isControlled]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: mergeRefs(forwardedRef, ref),\n      role: \"radiogroup\"\n    }),\n    []\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref2 = null) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        ref: ref2,\n        name,\n        [checkedKey]: value != null ? props2.value === value : void 0,\n        onChange(event) {\n          onChange(event);\n        },\n        \"data-radiogroup\": true\n      };\n    },\n    [isNative, name, onChange, value]\n  );\n  return {\n    getRootProps,\n    getRadioProps,\n    name,\n    ref,\n    focus,\n    setValue,\n    value,\n    onChange,\n    isDisabled,\n    isFocusable,\n    htmlProps\n  };\n}\n\nexport {\n  useRadioGroup\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}