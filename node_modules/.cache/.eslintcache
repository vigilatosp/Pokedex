[{"/home/guilherme/Imagens/Pokedex/src/index.js":"1","/home/guilherme/Imagens/Pokedex/src/App.js":"2","/home/guilherme/Imagens/Pokedex/src/reportWebVitals.js":"3","/home/guilherme/Imagens/Pokedex/src/GlobalStyle.js":"4","/home/guilherme/Imagens/Pokedex/src/contexts/GlobalContext.js":"5","/home/guilherme/Imagens/Pokedex/src/constants/url.js":"6","/home/guilherme/Imagens/Pokedex/src/routes/Router.js":"7","/home/guilherme/Imagens/Pokedex/src/pages/DetailsPage/DetailsPage.js":"8","/home/guilherme/Imagens/Pokedex/src/pages/PokedexPage/PokedexPage.js":"9","/home/guilherme/Imagens/Pokedex/src/pages/HomePage/HomePage.js":"10","/home/guilherme/Imagens/Pokedex/src/constants/color.js":"11","/home/guilherme/Imagens/Pokedex/src/constants/types.js":"12","/home/guilherme/Imagens/Pokedex/src/routes/coordinator.js":"13","/home/guilherme/Imagens/Pokedex/src/pages/PokedexPage/styled.js":"14","/home/guilherme/Imagens/Pokedex/src/pages/DetailsPage/styled.js":"15","/home/guilherme/Imagens/Pokedex/src/pages/HomePage/styled.js":"16","/home/guilherme/Imagens/Pokedex/src/components/Header/Header.js":"17","/home/guilherme/Imagens/Pokedex/src/components/Footer/Footer.js":"18","/home/guilherme/Imagens/Pokedex/src/components/Card/Card.js":"19","/home/guilherme/Imagens/Pokedex/src/components/Header/styled.js":"20","/home/guilherme/Imagens/Pokedex/src/components/Footer/styled.js":"21","/home/guilherme/Imagens/Pokedex/src/components/Card/styled.js":"22","/home/guilherme/Imagens/Pokedex/src/components/Modal/ModalCard.js":"23"},{"size":301,"mtime":1674213906149,"results":"24","hashOfConfig":"25"},{"size":3044,"mtime":1674213906093,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1674213906149,"results":"27","hashOfConfig":"25"},{"size":261,"mtime":1674213906093,"results":"28","hashOfConfig":"25"},{"size":84,"mtime":1674213906117,"results":"29","hashOfConfig":"25"},{"size":61,"mtime":1674213906117,"results":"30","hashOfConfig":"25"},{"size":631,"mtime":1674213906149,"results":"31","hashOfConfig":"25"},{"size":5038,"mtime":1674213906149,"results":"32","hashOfConfig":"25"},{"size":805,"mtime":1674213906149,"results":"33","hashOfConfig":"25"},{"size":4453,"mtime":1677434453314,"results":"34","hashOfConfig":"25"},{"size":868,"mtime":1674213906117,"results":"35","hashOfConfig":"25"},{"size":1493,"mtime":1674213906117,"results":"36","hashOfConfig":"25"},{"size":320,"mtime":1674213906149,"results":"37","hashOfConfig":"25"},{"size":428,"mtime":1677434549835,"results":"38","hashOfConfig":"25"},{"size":2298,"mtime":1674213906149,"results":"39","hashOfConfig":"25"},{"size":427,"mtime":1677434569311,"results":"40","hashOfConfig":"25"},{"size":3033,"mtime":1677429094705,"results":"41","hashOfConfig":"25"},{"size":628,"mtime":1677426764711,"results":"42","hashOfConfig":"25"},{"size":2476,"mtime":1674213906117,"results":"43","hashOfConfig":"25"},{"size":1654,"mtime":1677428828851,"results":"44","hashOfConfig":"25"},{"size":687,"mtime":1677427987494,"results":"45","hashOfConfig":"25"},{"size":1560,"mtime":1675192747422,"results":"46","hashOfConfig":"25"},{"size":1040,"mtime":1677434220620,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wnjb8l",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},"/home/guilherme/Imagens/Pokedex/src/index.js",[],[],"/home/guilherme/Imagens/Pokedex/src/App.js",["124"],[],"import React, { useEffect, useState } from \"react\";\nimport Router from \"./routes/Router\";\nimport { GlobalContext } from \"./contexts/GlobalContext\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"./constants/url\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nconst App = () => {\n  const [pokedex, setPokedex] = useState([]);\n  const [pokelist, setPokelist] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [flow, setFlow] = useState(1);\n  const [numbMin, setNumbMin] = useState(0);\n  const [perPage, setPerPage] = useState(20);\n  const [lastPage, setLastPage] = useState(1);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pokelistFilter, setPokelistFilter] = useState([]);\n\n  const fetchPokelist = async () => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}?offset=${numbMin}&limit=${perPage}`\n      );\n      setLastPage(Math.ceil(response.data.count / perPage));\n      setPokelist(response.data.results);\n    } catch (error) {\n      console.log(\"Erro ao buscar lista de pokemon\");\n      console.log(error.response);\n    }\n  };\n\n  const filterPokemon = (pokeName) => {\n    const pokeFilter = pokelist.filter((pokemon) => pokemon.name !== pokeName);\n    setPokelist(pokeFilter);\n  };\n\n  const addToPokedex = (pokemonAdd) => {\n    const filterPokedex = pokedex.find(\n      (pokemonInPokedex) => pokemonInPokedex.name === pokemonAdd.name\n    );\n    if (!filterPokedex) {\n      const newPokedex = [...pokedex, pokemonAdd];\n      const pokedexStringify = JSON.stringify(newPokedex);\n      localStorage.setItem(\"pokedex\", pokedexStringify);\n      setPokedex(newPokedex);\n    }\n    \n    const pokeFilter = pokelist.filter((pokemon) => pokemon.name !== pokemonAdd.name);\n    setPokelist(pokeFilter)\n  };\n\n  const removeToPokedex = (pokemonRemove) => {\n    const newPokedex = pokedex.filter(\n      (pokemonInPokedex) => pokemonInPokedex.name !== pokemonRemove.name\n    );\n\n    setPokedex(newPokedex);\n    const newPokelist = [...pokelist];\n\n    const pokedexStringify = JSON.stringify(newPokedex)\n    localStorage.setItem(\"pokedex\", pokedexStringify)\n\n    setPokelist(newPokelist);\n  };\n\n  useEffect(() => {\n    const getPokemonLocalStorage = localStorage.getItem(\"pokedex\");\n    if (getPokemonLocalStorage) {\n      const pokemonArray = JSON.parse(getPokemonLocalStorage);\n      setPokedex(pokemonArray);\n    }\n      fetchPokelist();\n  }, [pageNumber]);\n\n  const context = {\n    fetchPokelist,\n    pokelist,\n    setPokelist,\n    pokedex,\n    setPokedex,\n    isOpen,\n    setIsOpen,\n    flow,\n    setFlow,\n    setLastPage,\n    lastPage,\n    setPerPage,\n    perPage,\n    setNumbMin,\n    numbMin,\n    setPageNumber,\n    pageNumber,\n    filterPokemon,\n    addToPokedex,\n    removeToPokedex,\n    pokelistFilter,\n    setPokelistFilter,\n  };\n\n  return (\n    <ChakraProvider>\n      <GlobalContext.Provider value={context}>\n        <Router />\n        <GlobalStyle />\n      </GlobalContext.Provider>\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n","/home/guilherme/Imagens/Pokedex/src/reportWebVitals.js",[],[],"/home/guilherme/Imagens/Pokedex/src/GlobalStyle.js",[],[],"/home/guilherme/Imagens/Pokedex/src/contexts/GlobalContext.js",[],[],"/home/guilherme/Imagens/Pokedex/src/constants/url.js",[],[],"/home/guilherme/Imagens/Pokedex/src/routes/Router.js",[],[],"/home/guilherme/Imagens/Pokedex/src/pages/DetailsPage/DetailsPage.js",["125","126","127","128","129"],[],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Header from \"../../components/Header/Header\";\nimport { getPokemonType } from \"../../constants/types\";\nimport { BASE_URL } from \"../../constants/url\";\nimport {\n  BaseStats,\n  CardDetails,\n  Container,\n  ContainerLeft,\n  ContainerRight,\n  DivInfos,\n  DivMoves,\n  DivType,\n  DivTypes,\n  ImageLeft,\n  ImgPokemon,\n} from \"./styled\";\nimport { Flex, Heading, Progress, Text } from \"@chakra-ui/react\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { getPokemonColors } from \"../../constants/color\";\n\nconst DetailsPage = () => {\n  const [pokemon, setPokemon] = useState({});\n\n  const params = useParams();\n\n  const fetchPokeDetails = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/${params.pokemonName}`);\n      setPokemon(response.data);\n    } catch (error) {\n      console.log(\"Erro ao buscar detalhes de pokemon\");\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    fetchPokeDetails();\n  }, []);\n\n  return (\n    <>\n      <Header pokemon={pokemon} />\n      <Container>\n        <h1>Detalhes</h1>\n        <CardDetails color={getPokemonColors(pokemon.types && pokemon.types[0].type.name)}>\n          <ContainerLeft>\n            <ImageLeft>\n              <div>\n                <img src={pokemon.sprites?.front_default} />\n              </div>\n              <div>\n                <img src={pokemon.sprites?.back_default} />\n              </div>\n            </ImageLeft>\n            <BaseStats>\n              <Heading>Base stats</Heading>\n              <Flex\n                flexDirection={\"column\"}\n                borderTop={\"1px grey solid\"}\n                marginTop={\"16px\"}\n              >\n                {pokemon.stats?.map((stat) => {\n                  return (\n                    <div key={stat.stat.name}>\n                      <Flex\n                        borderBottom={\"1px grey solid\"}\n                        h={\"40px\"}\n                        alignItems={\"center\"}\n                      >\n                        <Flex w=\"100px\">\n                          <Text w=\"60px\" textAlign={\"end\"} fontSize={\"14px\"}>\n                            {stat.stat.name\n                              .replace(\"special-attack\", \"Sp. Atk\")\n                              .replace(\"special-defense\", \"Sp. Def\")}\n                          </Text>\n                          <Text fontSize={\"14px\"} margin={\"auto\"}>\n                            {stat.base_stat}\n                          </Text>\n                        </Flex>\n                        <Progress\n                          w={\"200px\"}\n                          borderRadius={\"4px\"}\n                          bgColor={\"#ffffff\"}\n                          colorScheme={\n                            stat.base_stat < 50\n                              ? \"orange\"\n                              : stat.base_stat < 80\n                              ? \"yellow\"\n                              : \"green\"\n                          }\n                          value={stat.base_stat}\n                        />\n                      </Flex>\n                    </div>\n                  );\n                })}\n                {pokemon.stats && (\n                  <Flex\n                    borderBottom={\"1px grey solid\"}\n                    h={\"40px\"}\n                    alignItems={\"center\"}\n                  >\n                    <Text\n                      w={\"60px\"}\n                      textTransform={\"capitalize\"}\n                      textAlign={\"end\"}\n                      fontSize={\"14px\"}\n                    >\n                      Total\n                    </Text>\n                    <Text margin={\"8px\"} fontSize={\"14px\"} fontWeight={\"bold\"}>\n                      {pokemon.stats.reduce(\n                        (acc, stat) => acc + stat.base_stat,\n                        0\n                      )}\n                    </Text>\n                  </Flex>\n                )}\n              </Flex>\n            </BaseStats>\n          </ContainerLeft>\n          <ContainerRight>\n            <DivInfos>\n              <DivType>\n                <h6>#{pokemon.id}</h6>\n                <h2>{pokemon.name}</h2>\n                <DivTypes>\n                  {pokemon.types?.map((type, index) => {\n                    return (\n                      <img src={getPokemonType(type.type.name)} key={index} />\n                    );\n                  })}\n                </DivTypes>\n              </DivType>\n              <DivMoves>\n                <h2>Moves: </h2>\n                {pokemon.moves?.slice(0, 4).map((move, index) => {\n                  return <h3 key={index}>{move.move.name}</h3>;\n                })}\n              </DivMoves>\n            </DivInfos>\n            <ImgPokemon\n              src={pokemon.sprites?.other.dream_world.front_default}\n            />\n          </ContainerRight>\n        </CardDetails>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default DetailsPage;\n","/home/guilherme/Imagens/Pokedex/src/pages/PokedexPage/PokedexPage.js",[],[],"/home/guilherme/Imagens/Pokedex/src/pages/HomePage/HomePage.js",["130","131","132","133"],[],"import React, { useContext, useEffect } from \"react\";\nimport Card from \"../../components/Card/Card\";\nimport Header from \"../../components/Header/Header\";\nimport { GlobalContext } from \"../../contexts/GlobalContext\";\nimport { Container, ContainerCard, Title } from \"./styled\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { goToHomeTurnPage } from \"../../routes/coordinator\";\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\nimport Footer from \"../../components/Footer/Footer\";\n\nconst HomePage = () => {\n  const context = useContext(GlobalContext);\n\n  const {\n    pokelist,\n    lastPage,\n    perPage,\n    setNumbMin,\n    setPageNumber,\n    pageNumber,\n    pokedex,\n    setPokelist,\n    pokelistFilter,\n    setPokelistFilter,\n  } = context;\n\n  const navigate = useNavigate();\n  const params = useParams();\n\n  useEffect(() => {\n    const pokeFilter = pokelist.filter(\n      (pokemonInList) =>\n        !pokedex.find(\n          (pokemonInPokedex) => pokemonInList.name === pokemonInPokedex.name\n        )\n    );\n    setPokelist(pokeFilter);\n    setPokelistFilter(pokeFilter);\n  }, []);\n\n  const filteredPokemonlist = () => {\n    const poke = pokelist\n      .filter(\n        (pokemonInList) =>\n          !pokedex.find(\n            (pokemonInPokedex) => pokemonInList.name === pokemonInPokedex.name\n          )\n      )\n      .sort((a, b) => {\n        if (a.url && b.url) {\n          const primeiro = a.url.split(\"/\");\n          const segundo = b.url.split(\"/\");\n          return Number(primeiro[6]) - Number(segundo[6]);\n        } else if (a.url && b.id) {\n          const primeiro = a.url.split(\"/\");\n          return Number(primeiro[6]) - Number(b.id);\n        } else if (a.id && b.url) {\n          const segundo = b.url.split(\"/\");\n          return Number(a.id) - Number(segundo[6]);\n        } else if (a.id && b.id) {\n          return Number(a.id) - Number(b.id);\n        }\n      });\n    return poke;\n  };\n\n  const handlePageTurn = (value) => {\n    if (value === 0) {\n      setPageNumber(1);\n      setNumbMin(0);\n      goToHomeTurnPage(navigate, 1);\n    } else if (value === lastPage) {\n      setPageNumber(lastPage);\n      setNumbMin((lastPage - 1) * perPage);\n      goToHomeTurnPage(navigate, lastPage);\n    } else {\n      setPageNumber(pageNumber + value);\n      setNumbMin((pageNumber + value - 1) * perPage);\n      goToHomeTurnPage(navigate, pageNumber + value);\n    }\n  };\n\n  useEffect(() => {\n    if (params.page) {\n      setNumbMin(Number(params.page) * perPage);\n      setPageNumber(Number(params.page));\n    }\n  }, [params.page, perPage]);\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Title>\n          <h1>Pokémons</h1>\n        </Title>\n        <ContainerCard>\n          {pokelist && filteredPokemonlist().map((pokemon) => {\n            return (\n              <Card\n                key={pokemon.name}\n                pokemonUrl={pokemon.url}\n                pokemon={pokemon}\n              />\n            );\n          })}\n        </ContainerCard>\n        <ButtonGroup\n          width={\"99vw\"}\n          justifyContent={\"center\"}\n          marginBottom={\"15px\"}\n        >\n          {pageNumber !== 1 && (\n            <Button onClick={() => handlePageTurn(0)} colorScheme=\"whiteAlpha\">\n              Primeira Pagina\n            </Button>\n          )}\n          {pageNumber - 2 > 0 && (\n            <Button onClick={() => handlePageTurn(-2)} colorScheme=\"whiteAlpha\">\n              {pageNumber - 2}\n            </Button>\n          )}\n          {pageNumber - 1 > 0 && (\n            <Button onClick={() => handlePageTurn(-1)} colorScheme=\"whiteAlpha\">\n              {pageNumber - 1}\n            </Button>\n          )}\n          <Button colorScheme=\"blackAlpha\">{pageNumber}</Button>\n          {pageNumber + 1 < lastPage && (\n            <Button onClick={() => handlePageTurn(1)} colorScheme=\"whiteAlpha\">\n              {pageNumber + 1}\n            </Button>\n          )}\n          {pageNumber + 2 < lastPage && (\n            <Button onClick={() => handlePageTurn(2)} colorScheme=\"whiteAlpha\">\n              {pageNumber + 2}\n            </Button>\n          )}\n          {pageNumber !== lastPage && (\n            <Button\n              onClick={() => handlePageTurn(lastPage)}\n              colorScheme=\"whiteAlpha\"\n            >\n              Ultima Pagina ({lastPage})\n            </Button>\n          )}\n        </ButtonGroup>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default HomePage;\n","/home/guilherme/Imagens/Pokedex/src/constants/color.js",[],[],"/home/guilherme/Imagens/Pokedex/src/constants/types.js",[],[],"/home/guilherme/Imagens/Pokedex/src/routes/coordinator.js",[],[],"/home/guilherme/Imagens/Pokedex/src/pages/PokedexPage/styled.js",[],[],"/home/guilherme/Imagens/Pokedex/src/pages/DetailsPage/styled.js",[],[],"/home/guilherme/Imagens/Pokedex/src/pages/HomePage/styled.js",[],[],"/home/guilherme/Imagens/Pokedex/src/components/Header/Header.js",["134","135","136","137","138","139","140"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router\";\nimport { goToHomePage, goToPokedexPage } from \"../../routes/coordinator\";\nimport {\n  ButtonDelet,\n  ButtonPokedex,\n  ButtonPokemon,\n  Container,\n  ButtonAdd,\n} from \"./styled\";\nimport logo from \"../../img/pokemon-logo.jpeg\";\nimport ModalCard from \"../Modal/ModalCard\";\nimport { GlobalContext } from \"../../contexts/GlobalContext\";\n\nconst Header = (props) => {\n\n  const location = useLocation();\n\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const context = useContext(GlobalContext);\n\n  const {\n    pageNumber,\n    pokedex,\n    addToPokedex,\n    removeToPokedex,\n    setIsOpen,\n    setFlow,\n  } = context;\n\n  useEffect(() => {\n    renderHeader();\n  }, []);\n\n  const renderHeader = () => {\n    switch (location.pathname) {\n      case \"/\":\n        return (\n          <Container>\n            <div>\n              <img src={logo} />\n            </div>\n            <ButtonPokedex>\n              <button onClick={() => goToPokedexPage(navigate)}>Pokedex </button>\n            </ButtonPokedex>\n          </Container>\n        );\n      case `/page/${pageNumber}`:\n        return (\n          <Container>\n            <div>\n              <img src={logo} />\n            </div>\n            <ButtonPokedex>\n              <button onClick={() => goToPokedexPage(navigate)}>Pokedex</button>\n            </ButtonPokedex>\n          </Container>\n        );\n      case \"/pokedex\":\n        return (\n          <Container>\n            <ButtonPokemon>\n              <button onClick={() => goToHomePage(navigate)}>\n                Todos Pokémons\n              </button>\n            </ButtonPokemon>\n            <img src={logo} />\n          </Container>\n        );\n      case `/detail/${params.pokemonName}`:\n        return (\n          <Container>\n            <ButtonPokemon>\n              <button onClick={() => goToHomePage(navigate)}>\n                Todos Pokémons\n              </button>\n            </ButtonPokemon>\n            <img src={logo} />\n            {pokedex.find((pokemon) => pokemon.name === params.pokemonName) ? (\n              <ButtonDelet>\n                <button\n                  onClick={() => {\n                    setFlow(2);\n                    setIsOpen(true);\n                    removeToPokedex(props.pokemon);\n                  }}\n                >\n                  Excluir da Pokédex\n                </button>\n              </ButtonDelet>\n            ) : (\n              <ButtonAdd>\n                <button\n                  onClick={() => {\n                    setFlow(1);\n                    setIsOpen(true);\n                    addToPokedex(props.pokemon);\n                  }}\n                >\n                  Adicionar da Pokédex\n                </button>\n              </ButtonAdd>\n            )}\n          </Container>\n        );\n    }\n  };\n\n  return (\n    <Container>\n      {renderHeader()}\n      <ModalCard />\n    </Container>\n  );\n};\n\nexport default Header;\n","/home/guilherme/Imagens/Pokedex/src/components/Footer/Footer.js",["141","142","143","144"],[],"import { Container, Icons } from \"./styled\";\nimport github from \"../../img/github.png\";\nimport linkedin from \"../../img/linkedin.svg.png\";\n\nconst Footer = () => {\n  return (\n    <Container>\n      <Icons>\n        <h1>Desenvolvido por: Guilherme</h1>\n        <div>\n          <a href=\"https://github.com/vigilatosp\" target='_blank'>\n            <img src={github} />\n          </a>\n          <a href=\"https://www.linkedin.com/in/vigilatosp/\" target='_blank'>\n            <img src={linkedin} />\n          </a>\n        </div>\n        <p>Todos os direitos reservados.</p>\n      </Icons>\n    </Container>\n  );\n};\n\nexport default Footer;","/home/guilherme/Imagens/Pokedex/src/components/Card/Card.js",["145","146"],[],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { getPokemonColors } from \"../../constants/color\";\nimport { getPokemonType } from \"../../constants/types\";\nimport { BASE_URL } from \"../../constants/url\";\nimport { GlobalContext } from \"../../contexts/GlobalContext\";\nimport { goToDetailsPage } from \"../../routes/coordinator\";\nimport {\n  ButtonPokedex,\n  ButtonPokemon,\n  CardType,\n  Container,\n  ImgPokemon,\n  Link,\n  Pokemon,\n  Type,\n} from \"./styled\";\n\n  const Card = (props) => {\n  const navigate = useNavigate();\n  const [pokemon, setPokemon] = useState({});\n  const location = useLocation();\n\n  const context = useContext(GlobalContext);\n\n  const {\n    setIsOpen,\n    setFlow,\n    addToPokedex,\n    removeToPokedex,\n  } = context;\n\n  const fetchPokeDetails = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/${props.pokemon.name}`);\n      setPokemon(response.data);\n    } catch (error) {\n      console.log(\"Erro ao buscar detalhes de pokemon\");\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    fetchPokeDetails();\n  }, []);\n\n  return (\n    <Container\n      color={getPokemonColors(pokemon.types && pokemon.types[0].type.name)}\n    >\n      <Pokemon>\n        <div>\n          <p>#{pokemon.id}</p>\n          <h1>{pokemon.name}</h1>\n          <Type>\n            {pokemon.types?.map((type, index) => {\n              return (\n                <CardType src={getPokemonType(type.type.name)} key={index} />\n              );\n            })}\n          </Type>\n        </div>\n        <ImgPokemon\n          src={pokemon.sprites?.other[\"official-artwork\"][\"front_default\"]}\n          alt={pokemon.name}\n        />\n      </Pokemon>\n      <Link>\n        <a onClick={() => goToDetailsPage(navigate, pokemon.name)}>\n          <p>Detalhes</p>\n        </a>\n        {location.pathname === \"/pokedex\" ? (\n          <ButtonPokedex\n            onClick={() => {\n              setFlow(2);\n              setIsOpen(true);\n              removeToPokedex(pokemon);\n            }}\n          >\n            Excluir\n          </ButtonPokedex>\n        ) : (\n          <ButtonPokemon\n            onClick={() => {\n              setFlow(1);\n              setIsOpen(true);\n              addToPokedex(pokemon);\n            }}\n          >\n            Capturar!\n          </ButtonPokemon>\n        )}\n      </Link>\n    </Container>\n  );\n};\n\nexport default Card;","/home/guilherme/Imagens/Pokedex/src/components/Header/styled.js",[],[],"/home/guilherme/Imagens/Pokedex/src/components/Footer/styled.js",[],[],"/home/guilherme/Imagens/Pokedex/src/components/Card/styled.js",[],[],"/home/guilherme/Imagens/Pokedex/src/components/Modal/ModalCard.js",["147","148"],[],"import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  Text,\n  Heading,\n  Flex,\n} from \"@chakra-ui/react\";\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"../../contexts/GlobalContext\";\n\nfunction ModalCard() {\n  const context = useContext(GlobalContext);\n\n  const { isOpen, setIsOpen, flow, setFlow } = context;\n\n  return (\n    <>\n      <Modal isCentered isOpen={isOpen} onClose={() => setIsOpen(false)}>\n        <ModalOverlay bg=\"blackAlpha.300\" backdropFilter=\"blur(10px)\" />\n        <ModalContent>\n          <Flex\n            flexDirection={\"column\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            h={\"220px\"}\n            w={\"450px\"}\n          >\n            {flow === 1 ? (\n              <>\n                <Text>O Pokémon foi adicionado</Text>\n              </>\n            ) : (\n              <>\n                <Text>O Pokémon foi removido</Text>\n              </>\n            )}\n          </Flex>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalCard;\n",{"ruleId":"149","severity":1,"message":"150","line":74,"column":6,"nodeType":"151","endLine":74,"endColumn":18,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":2,"column":17,"nodeType":"155","messageId":"156","endLine":2,"endColumn":27},{"ruleId":"149","severity":1,"message":"157","line":41,"column":6,"nodeType":"151","endLine":41,"endColumn":8,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":52,"column":17,"nodeType":"161","endLine":52,"endColumn":61},{"ruleId":"159","severity":1,"message":"160","line":55,"column":17,"nodeType":"161","endLine":55,"endColumn":60},{"ruleId":"159","severity":1,"message":"160","line":133,"column":23,"nodeType":"161","endLine":133,"endColumn":79},{"ruleId":"153","severity":1,"message":"162","line":23,"column":5,"nodeType":"155","messageId":"156","endLine":23,"endColumn":19},{"ruleId":"149","severity":1,"message":"163","line":39,"column":6,"nodeType":"151","endLine":39,"endColumn":8,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":49,"column":20,"nodeType":"167","messageId":"168","endLine":49,"endColumn":22},{"ruleId":"149","severity":1,"message":"169","line":88,"column":6,"nodeType":"151","endLine":88,"endColumn":28,"suggestions":"170"},{"ruleId":"153","severity":1,"message":"171","line":1,"column":40,"nodeType":"155","messageId":"156","endLine":1,"endColumn":48},{"ruleId":"149","severity":1,"message":"172","line":35,"column":6,"nodeType":"151","endLine":35,"endColumn":8,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":38,"column":5,"nodeType":"176","messageId":"177","endLine":108,"endColumn":6},{"ruleId":"159","severity":1,"message":"160","line":43,"column":15,"nodeType":"161","endLine":43,"endColumn":33},{"ruleId":"159","severity":1,"message":"160","line":54,"column":15,"nodeType":"161","endLine":54,"endColumn":33},{"ruleId":"159","severity":1,"message":"160","line":69,"column":13,"nodeType":"161","endLine":69,"endColumn":31},{"ruleId":"159","severity":1,"message":"160","line":80,"column":13,"nodeType":"161","endLine":80,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":11,"column":11,"nodeType":"161","messageId":"180","endLine":11,"endColumn":67,"fix":"181"},{"ruleId":"159","severity":1,"message":"160","line":12,"column":13,"nodeType":"161","endLine":12,"endColumn":33},{"ruleId":"178","severity":1,"message":"179","line":14,"column":11,"nodeType":"161","messageId":"180","endLine":14,"endColumn":77,"fix":"182"},{"ruleId":"159","severity":1,"message":"160","line":15,"column":13,"nodeType":"161","endLine":15,"endColumn":35},{"ruleId":"149","severity":1,"message":"157","line":46,"column":6,"nodeType":"151","endLine":46,"endColumn":8,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":70,"column":9,"nodeType":"161","endLine":70,"endColumn":68},{"ruleId":"153","severity":1,"message":"186","line":6,"column":3,"nodeType":"155","messageId":"156","endLine":6,"endColumn":10},{"ruleId":"153","severity":1,"message":"187","line":15,"column":36,"nodeType":"155","messageId":"156","endLine":15,"endColumn":43},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPokelist'. Either include it or remove the dependency array.","ArrayExpression",["188"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchPokeDetails'. Either include it or remove the dependency array.",["189"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'pokelistFilter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pokedex', 'pokelist', 'setPokelist', and 'setPokelistFilter'. Either include them or remove the dependency array.",["190"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'setNumbMin' and 'setPageNumber'. Either include them or remove the dependency array.",["191"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'renderHeader'. Either include it or remove the dependency array.",["192"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"193","text":"194"},{"range":"195","text":"194"},["196"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Heading' is defined but never used.","'setFlow' is assigned a value but never used.",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},[328,328]," rel=\"noreferrer\"",[453,453],{"desc":"199","fix":"207"},"Update the dependencies array to be: [fetchPokelist, pageNumber]",{"range":"208","text":"209"},"Update the dependencies array to be: [fetchPokeDetails]",{"range":"210","text":"211"},"Update the dependencies array to be: [pokedex, pokelist, setPokelist, setPokelistFilter]",{"range":"212","text":"213"},"Update the dependencies array to be: [params.page, perPage, setNumbMin, setPageNumber]",{"range":"214","text":"215"},"Update the dependencies array to be: [renderHeader]",{"range":"216","text":"217"},{"range":"218","text":"211"},[2443,2455],"[fetchPokelist, pageNumber]",[1088,1090],"[fetchPokeDetails]",[1104,1106],"[pokedex, pokelist, setPokelist, setPokelistFilter]",[2550,2572],"[params.page, perPage, setNumbMin, setPageNumber]",[806,808],"[renderHeader]",[1179,1181]]